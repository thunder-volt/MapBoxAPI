{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ishu1\\\\OneDrive\\\\Documents\\\\MapBoxAPI_React\\\\mapbox\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ishu1\\\\OneDrive\\\\Documents\\\\MapBoxAPI_React\\\\mapbox\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport utils from '../utils';\nimport template from 'lodash.template';\nimport isEqual from 'lodash.isequal';\n\nvar fs = require('fs'); // substack/brfs#39\n\n\nvar instructionsTemplate = template(fs.readFileSync(__dirname + '/../templates/instructions.html', 'utf8'));\nvar errorTemplate = template(fs.readFileSync(__dirname + '/../templates/error.html', 'utf8'));\n/**\n * Summary/Instructions controller\n *\n * @param {HTMLElement} el Summary parent container\n * @param {Object} store A redux store\n * @param {Object} actions Actions an element can dispatch\n * @param {Object} map The mapboxgl instance\n * @private\n */\n\nvar Instructions = /*#__PURE__*/function () {\n  function Instructions(el, store, actions, map) {\n    _classCallCheck(this, Instructions);\n\n    this.container = el;\n    this.actions = actions;\n    this.store = store;\n    this._map = map;\n    this.directions = {};\n    this.render();\n  }\n\n  _createClass(Instructions, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      this.store.subscribe(function () {\n        var _this$actions = _this.actions,\n            hoverMarker = _this$actions.hoverMarker,\n            setRouteIndex = _this$actions.setRouteIndex;\n\n        var _this$store$getState = _this.store.getState(),\n            routeIndex = _this$store$getState.routeIndex,\n            unit = _this$store$getState.unit,\n            directions = _this$store$getState.directions,\n            error = _this$store$getState.error,\n            compile = _this$store$getState.compile;\n\n        var shouldRender = !isEqual(directions[routeIndex], _this.directions);\n\n        if (error) {\n          _this.container.innerHTML = errorTemplate({\n            error: error\n          });\n          return;\n        }\n\n        if (directions.length && shouldRender) {\n          var direction = _this.directions = directions[routeIndex];\n\n          if (compile) {\n            direction.legs.forEach(function (leg) {\n              leg.steps.forEach(function (step) {\n                step.maneuver.instruction = compile('en', step);\n              });\n            });\n          }\n\n          _this.container.innerHTML = instructionsTemplate({\n            routeIndex: routeIndex,\n            routes: directions.length,\n            steps: direction.legs[0].steps,\n            // Todo: Respect all legs,\n            format: utils.format[unit],\n            duration: utils.format[unit](direction.distance),\n            distance: utils.format.duration(direction.duration)\n          });\n\n          var steps = _this.container.querySelectorAll('.mapbox-directions-step');\n\n          Array.prototype.forEach.call(steps, function (el) {\n            var lng = el.getAttribute('data-lng');\n            var lat = el.getAttribute('data-lat');\n            el.addEventListener('mouseover', function () {\n              hoverMarker([lng, lat]);\n            });\n            el.addEventListener('mouseout', function () {\n              hoverMarker(null);\n            });\n            el.addEventListener('click', function () {\n              _this._map.flyTo({\n                center: [lng, lat],\n                zoom: 16\n              });\n            });\n          });\n\n          var routes = _this.container.querySelectorAll('input[type=\"radio\"]');\n\n          Array.prototype.forEach.call(routes, function (el) {\n            el.addEventListener('change', function (e) {\n              setRouteIndex(parseInt(e.target.id, 10));\n            });\n          });\n        } else if (_this.container.innerHTML && shouldRender) {\n          _this.container.innerHTML = '';\n        }\n      });\n    }\n  }]);\n\n  return Instructions;\n}();\n\nexport { Instructions as default };","map":null,"metadata":{},"sourceType":"module"}