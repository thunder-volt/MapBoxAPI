{"ast":null,"code":"import * as types from '../constants/action_types.js';\nimport deepAssign from 'deep-assign';\nvar initialState = {\n  // Options set on initialization\n  api: 'https://api.mapbox.com/directions/v5/',\n  profile: 'mapbox/driving-traffic',\n  alternatives: false,\n  congestion: false,\n  unit: 'imperial',\n  flyTo: true,\n  placeholderOrigin: 'Choose a starting place',\n  placeholderDestination: 'Choose destination',\n  zoom: 16,\n  language: 'en',\n  compile: null,\n  proximity: false,\n  styles: [],\n  // UI controls\n  controls: {\n    profileSwitcher: true,\n    inputs: true,\n    instructions: true\n  },\n  // Optional setting to pass options available to mapbox-gl-geocoder\n  geocoder: {},\n  interactive: true,\n  // Container for client registered events\n  events: {},\n  // Marker feature drawn on the map at any point.\n  origin: {},\n  destination: {},\n  hoverMarker: {},\n  waypoints: [],\n  // User input strings or result returned from geocoder\n  originQuery: null,\n  destinationQuery: null,\n  originQueryCoordinates: null,\n  destinationQueryCoordinates: null,\n  // Directions data\n  directions: [],\n  routeIndex: 0,\n  routePadding: 80\n};\n\nfunction data() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.SET_OPTIONS:\n      return deepAssign({}, state, action.options);\n\n    case types.DIRECTIONS_PROFILE:\n      return Object.assign({}, state, {\n        profile: action.profile\n      });\n\n    case types.ORIGIN:\n      return Object.assign({}, state, {\n        origin: action.origin,\n        hoverMarker: {}\n      });\n\n    case types.DESTINATION:\n      return Object.assign({}, state, {\n        destination: action.destination,\n        hoverMarker: {}\n      });\n\n    case types.HOVER_MARKER:\n      return Object.assign({}, state, {\n        hoverMarker: action.hoverMarker\n      });\n\n    case types.WAYPOINTS:\n      return Object.assign({}, state, {\n        waypoints: action.waypoints\n      });\n\n    case types.ORIGIN_QUERY:\n      return Object.assign({}, state, {\n        originQuery: action.query\n      });\n\n    case types.DESTINATION_QUERY:\n      return Object.assign({}, state, {\n        destinationQuery: action.query\n      });\n\n    case types.ORIGIN_FROM_COORDINATES:\n      return Object.assign({}, state, {\n        originQueryCoordinates: action.coordinates\n      });\n\n    case types.DESTINATION_FROM_COORDINATES:\n      return Object.assign({}, state, {\n        destinationQueryCoordinates: action.coordinates\n      });\n\n    case types.ORIGIN_CLEAR:\n      return Object.assign({}, state, {\n        origin: {},\n        originQuery: '',\n        waypoints: [],\n        directions: []\n      });\n\n    case types.DESTINATION_CLEAR:\n      return Object.assign({}, state, {\n        destination: {},\n        destinationQuery: '',\n        waypoints: [],\n        directions: []\n      });\n\n    case types.DIRECTIONS:\n      return Object.assign({}, state, {\n        directions: action.directions\n      });\n\n    case types.ROUTE_INDEX:\n      return Object.assign({}, state, {\n        routeIndex: action.routeIndex\n      });\n\n    case types.ERROR:\n      return Object.assign({}, state, {\n        error: action.error\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default data;","map":null,"metadata":{},"sourceType":"module"}